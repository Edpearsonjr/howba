isInsideDerailmentArea <- function(x, polygonx, polygony){
splitString <- strsplit(x,",")[[1]]
lat <- as.numeric(splitString[1])
long <- as.numeric(splitString[2])
isInside <- isInsidePolygon(lat, long, polygonx, polygony)
isInside
}
################################################################################
# A few constants that are needed
################################################################################
DB_HOST = 'localhost'
DB_PORT = '3306'
DB_USER = 'root'
DB_PASSWORD = '#Ab1992#'
DB_NAME = 'howba'
################################################################################
# Connecting to the database
################################################################################
print("Connecting to the database")
connection <- dbConnect(RMySQL::MySQL(), user=DB_USER, password=DB_PASSWORD, host=DB_HOST, dbname=DB_NAME)
################################################################################
# Getting the November 24th 2013 data
################################################################################
queryNovemberSunday <-"SELECT * FROM NOV2013 WHERE DATE(pickup_time)='2013-11-24'"
data <- tbl_df(dbGetQuery(connection, queryNovemberSunday))
################################################################################
# Getting the cab rides for 24th November in and around the area where the disaster happend
################################################################################
# Get the whole days data at the two locations
# One around the disaster location
# One around the other location where the disaster didnt happen
# bounding box around the derailment
lat_min_around_the_derailment <- 40.8435392765
lat_max_around_the_derailment <- 40.915905168
lon_min_around_the_derailment <- -73.9706334275
lon_max_around_the_derailment  <- -73.8749221281
bounding_box_derailment_x_coordinates <- c(lat_max_around_the_derailment, lat_max_around_the_derailment, lat_min_around_the_derailment, lat_min_around_the_derailment)
bounding_box_derailment_y_coordinates <- c(lon_min_around_the_derailment, lon_max_around_the_derailment, lon_max_around_the_derailment, lon_min_around_the_derailment)
# Remove bad data
cleanData <- data %>%
mutate(pickup_time=ymd_hms(pickup_time)) %>%     # Converting into lubridate date
mutate(dropoff_time=ymd_hms(dropoff_time)) %>%   # Converting the drop of time into lubridate
filter(pickup_latitude > 0, pickup_longitude < 0) %>%
filter(dropoff_latitude > 0,dropoff_longitude < 0)
#take only those data for which the pickup is within the bounding box of the derailment
aroundTheDerailmentPickup <- cleanData %>%
mutate(pickup_geom =paste(pickup_latitude, pickup_longitude, sep=","))
isInside <- lapply(aroundTheDerailmentPickup$pickup_geom, function(x){isInsideDerailmentArea(x, bounding_box_derailment_x_coordinates, bounding_box_derailment_y_coordinates)})
aroundTheDerailmentPickup <- aroundTheDerailmentPickup %>%
mutate(within=isInside) %>%
filter(within==TRUE)
aroundTheDerailmentDropoff <- cleanData %>%
mutate(dropoff_geom =paste(dropoff_latitude, dropoff_longitude, sep=","))
isInside <- lapply(aroundTheDerailmentDropoff$dropoff_geom, function(x){isInsideDerailmentArea(x, bounding_box_derailment_x_coordinates, bounding_box_derailment_y_coordinates)})
aroundTheDerailmentDropoff <- aroundTheDerailmentDropoff %>%
mutate(within=isInside) %>%
filter(within==TRUE)
##############################################################################################################################################################################################################################################
################################################################################
# Getting the cab rides for 24th November in and around the area which is similar
################################################################################
# bounding box around the queens station
lat_min_around_the_queens_station <- 40.6734170542
lat_max_around_the_queens_station <- 40.7457829458
lon_min_around_the_queens_station <- -73.8783931785
lon_max_around_the_queens_station  <- -73.7829268215
bounding_box_around_queens_station_x_coordinates <- c(lat_max_around_the_queens_station, lat_max_around_the_queens_station, lat_min_around_the_queens_station, lat_min_around_the_queens_station)
bounding_box_around_queens_station_y_coorindates <- c(lon_min_around_the_queens_station, lon_max_around_the_queens_station, lon_max_around_the_queens_station, lon_min_around_the_queens_station)
#take only those data for which the pickup is within the bounding box of the queen station
aroundTheQueensStationPickup <- cleanData %>%
mutate(pickup_geom =paste(pickup_latitude, pickup_longitude, sep=","))
isInside <- lapply(aroundTheQueensStationPickup$pickup_geom, function(x){isInsideDerailmentArea(x, bounding_box_around_queens_station_x_coordinates, bounding_box_around_queens_station_y_coorindates)})
aroundTheQueensStationPickup <- aroundTheQueensStationPickup %>%
mutate(within=isInside) %>%
filter(within==TRUE)
aroundTheQueensStationtDropoff <- cleanData %>%
mutate(dropoff_geom =paste(dropoff_latitude, dropoff_longitude, sep=","))
isInside <- lapply(aroundTheQueensStationtDropoff$dropoff_geom, function(x){isInsideDerailmentArea(x, bounding_box_around_queens_station_x_coordinates, bounding_box_around_queens_station_y_coorindates)})
aroundTheQueensStationtDropoff <- aroundTheQueensStationtDropoff %>%
mutate(within=isInside) %>%
filter(within==TRUE)
write.csv(aroundTheDerailmentPickup, file="aroundTheDerailmentPickup20131124.csv")
View(aroundTheDerailmentDropoff)
save(aroundTheDerailmentPickup, file="aroundTheDerailmentPickup20131124.csv")
save(aroundTheDerailmentDropoff, file="aroundTheDerailmentDropoff20131124.csv")
save(aroundTheQueensStationPickup, file="aroundTheQueensStationPickup20131124.csv")
save(aroundTheQueensStationtDropoff, file="aroundTheQueensStationDropoff20131124.csv")
PICKUP_DISASTER_FILE <- "aroundTheDerailmentPickup20131124.csv"
DROPOFF_DISASTER_FILE <- "aroundTheDerailmentDropoff20131124.csv"
PICKUP_QUEENS_STATION_FILE <- "aroundTheQueensStationPickup20131124.csv"
DROPOFF_QUEENS_STATION_FILE <- "aroundTheQueensStationDropoff20131124.csv"
pickup_disaster <- tbl_df(read.csv(PICKUP_DISASTER_FILE))
dropoff_disaster <- tbl_df(read.csv(DROPOFF_DISASTER_FILE))
pickup_queens <- tbl_df(read.csv(PICKUP_QUEENS_STATION_FILE))
dropoff_queens <- tbl_df(read.csv(DROPOFF_QUEENS_STATION_FILE))
View(dropoff_disaster)
View(dropoff_queens)
dropff_disaster
dropoff_queens
################################################################################
# Preamble - Load all the libraries here
#library(\'libraryName\') # The purpose of the library
################################################################################
library('dplyr')                    # Operations on frames
library('RMySQL')                   # For connecting with the mysql package
library('lubridate')                # For manipulating the dates in R
library('sp')
################################################################################
# Clearing the environment variables
################################################################################
rm(list=ls())
################################################################################
# R is not allowing me to source the file in utils.R
################################################################################
isInsidePolygon <- function(latitude, longitude, polygonx, polygony){
# @params: latitude -> float
#          longitude -> float
#          polygonx -> list of x coordinates for the borough to check in
#          ploygony -> list of x coordinates for the borough to check in
value <- point.in.polygon(latitude, longitude, pol.x = polygonx, pol.y = polygony)
isInside <- FALSE
if(value == 1 | value == 3){
isInside <- TRUE
}
else{
isInside <- FALSE
}
isInside
}
isInsideDerailmentArea <- function(x, polygonx, polygony){
splitString <- strsplit(x,",")[[1]]
lat <- as.numeric(splitString[1])
long <- as.numeric(splitString[2])
isInside <- isInsidePolygon(lat, long, polygonx, polygony)
isInside
}
################################################################################
# A few constants that are needed
################################################################################
DB_HOST = 'localhost'
DB_PORT = '3306'
DB_USER = 'root'
DB_PASSWORD = '#Ab1992#'
DB_NAME = 'howba'
################################################################################
# Connecting to the database
################################################################################
print("Connecting to the database")
connection <- dbConnect(RMySQL::MySQL(), user=DB_USER, password=DB_PASSWORD, host=DB_HOST, dbname=DB_NAME)
################################################################################
# Getting the November 24th 2013 data
################################################################################
queryNovemberSunday <-"SELECT * FROM NOV2013 WHERE DATE(pickup_time)='2013-11-24'"
data <- tbl_df(dbGetQuery(connection, queryNovemberSunday))
################################################################################
# Getting the cab rides for 24th November in and around the area where the disaster happend
################################################################################
# Get the whole days data at the two locations
# One around the disaster location
# One around the other location where the disaster didnt happen
# bounding box around the derailment
lat_min_around_the_derailment <- 40.8435392765
lat_max_around_the_derailment <- 40.915905168
lon_min_around_the_derailment <- -73.9706334275
lon_max_around_the_derailment  <- -73.8749221281
bounding_box_derailment_x_coordinates <- c(lat_max_around_the_derailment, lat_max_around_the_derailment, lat_min_around_the_derailment, lat_min_around_the_derailment)
bounding_box_derailment_y_coordinates <- c(lon_min_around_the_derailment, lon_max_around_the_derailment, lon_max_around_the_derailment, lon_min_around_the_derailment)
# Remove bad data
cleanData <- data %>%
mutate(pickup_time=ymd_hms(pickup_time)) %>%     # Converting into lubridate date
mutate(dropoff_time=ymd_hms(dropoff_time)) %>%   # Converting the drop of time into lubridate
filter(pickup_latitude > 0, pickup_longitude < 0) %>%
filter(dropoff_latitude > 0,dropoff_longitude < 0)
#take only those data for which the pickup is within the bounding box of the derailment
aroundTheDerailmentPickup <- cleanData %>%
mutate(pickup_geom =paste(pickup_latitude, pickup_longitude, sep=","))
isInside <- lapply(aroundTheDerailmentPickup$pickup_geom, function(x){isInsideDerailmentArea(x, bounding_box_derailment_x_coordinates, bounding_box_derailment_y_coordinates)})
aroundTheDerailmentPickup <- aroundTheDerailmentPickup %>%
mutate(within=isInside) %>%
filter(within==TRUE)
aroundTheDerailmentDropoff <- cleanData %>%
mutate(dropoff_geom =paste(dropoff_latitude, dropoff_longitude, sep=","))
isInside <- lapply(aroundTheDerailmentDropoff$dropoff_geom, function(x){isInsideDerailmentArea(x, bounding_box_derailment_x_coordinates, bounding_box_derailment_y_coordinates)})
aroundTheDerailmentDropoff <- aroundTheDerailmentDropoff %>%
mutate(within=isInside) %>%
filter(within==TRUE)
##############################################################################################################################################################################################################################################
################################################################################
# Getting the cab rides for 24th November in and around the area which is similar
################################################################################
# bounding box around the queens station
lat_min_around_the_queens_station <- 40.6734170542
lat_max_around_the_queens_station <- 40.7457829458
lon_min_around_the_queens_station <- -73.8783931785
lon_max_around_the_queens_station  <- -73.7829268215
bounding_box_around_queens_station_x_coordinates <- c(lat_max_around_the_queens_station, lat_max_around_the_queens_station, lat_min_around_the_queens_station, lat_min_around_the_queens_station)
bounding_box_around_queens_station_y_coorindates <- c(lon_min_around_the_queens_station, lon_max_around_the_queens_station, lon_max_around_the_queens_station, lon_min_around_the_queens_station)
#take only those data for which the pickup is within the bounding box of the queen station
aroundTheQueensStationPickup <- cleanData %>%
mutate(pickup_geom =paste(pickup_latitude, pickup_longitude, sep=","))
isInside <- lapply(aroundTheQueensStationPickup$pickup_geom, function(x){isInsideDerailmentArea(x, bounding_box_around_queens_station_x_coordinates, bounding_box_around_queens_station_y_coorindates)})
aroundTheQueensStationPickup <- aroundTheQueensStationPickup %>%
mutate(within=isInside) %>%
filter(within==TRUE)
aroundTheQueensStationtDropoff <- cleanData %>%
mutate(dropoff_geom =paste(dropoff_latitude, dropoff_longitude, sep=","))
isInside <- lapply(aroundTheQueensStationtDropoff$dropoff_geom, function(x){isInsideDerailmentArea(x, bounding_box_around_queens_station_x_coordinates, bounding_box_around_queens_station_y_coorindates)})
aroundTheQueensStationtDropoff <- aroundTheQueensStationtDropoff %>%
mutate(within=isInside) %>%
filter(within==TRUE)
save(aroundTheQueensStationtDropoff, file="aroundTheQueensStationDropoff20131124.RData")
save(aroundTheQueensStationPickup, file="aroundTheQueensStationPickup20131124.RData")
save(aroundTheDerailmentDropoff, file="aroundTheDerailmentDropoff20131124.RData")
save(aroundTheDerailmentPickup, file="aroundTheDerailmentPickup20131124.RData")
PICKUP_DISASTER_FILE <- "aroundTheDerailmentPickup20131124.RData"
DROPOFF_DISASTER_FILE <- "aroundTheDerailmentDropoff20131124.RData"
PICKUP_QUEENS_STATION_FILE <- "aroundTheQueensStationPickup20131124.RData"
DROPOFF_QUEENS_STATION_FILE <- "aroundTheQueensStationDropoff20131124.RData"
pickup_disaster <- tbl_df(load(PICKUP_DISASTER_FILE))
dropoff_disaster <- tbl_df(load(DROPOFF_DISASTER_FILE))
pickup_queens <- tbl_df(load(PICKUP_QUEENS_STATION_FILE))
dropoff_queens <- tbl_df(load(DROPOFF_QUEENS_STATION_FILE))
?load
load(PICKUP_DISASTER_FILE)
load(DROPOFF_DISASTER_FILE)
load(PICKUP_QUEENS_STATION_FILE)
load(DROPOFF_QUEENS_STATION_FILE)
pickup_disaster <- tbl_df(aroundTheDerailmentPickup)
dropoff_disaster <- tbl_df(aroundTheDerailmentDropoff)
pickup_queens <- tbl_df(aroundTheQueensStationPickup)
dropoff_queens <- tbl_df(aroundTheQueensStationtDropoff)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time))
dropoff_disaster <- dropoff_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time))
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time),
day <- day(pickup_time))
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time),
day = day(pickup_time))
View(pickup_disaster)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_time))
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_hour))
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_time))
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_time))
View(pickup_queens)
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour))
+ geom_histogram()
library('ggplot2')
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour))
+ geom_histogram()
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) + geom_histogram()
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) +
geom_histogram()
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) +
geom_histogram(binwidth =0.5)
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) +
geom_histogram(binwidth =0.5,
xlab="Pickup hour")
)
?geom_histogram
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) +
geom_histogram(binwidth =0.5
)
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour, x="Pickup Hour")) +
geom_histogram(binwidth =0.5
)
ggplot(data=pickup_disaster, aes(pickup_disaster$pickup_hour)) +
geom_histogram(binwidth =0.5
)
qplot(pikcup_hour, data=pickup_disaster, geom = "histogram")
qplot(pickup_hour, data=pickup_disaster, geom = "histogram")
qplot(pickup_hour, data=pickup_disaster, geom = "histogram", binwidth=1)
qplot(pickup_hour, data=pickup_disaster, geom = "histogram", binwidth=0.5)
qplot(pickup_hour, data=pickup_disaster, geom = "histogram", binwidth=0.7)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropff_time = ymd_hms(pickup_time),
day = day(pickup_time),
hour = hour(pickup_time,
type = 'disaster'))
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
day = day(pickup_time),
hour = hour(pickup_time),
type= 'queens')
dataForPlot <- rbind(pickup_disaster, pickup_queens)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(pickup_time),
day = day(pickup_time),
hour = hour(pickup_time,
type = 'disaster'))
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
day = day(pickup_time),
hour = hour(pickup_time),
type= 'queens')
PICKUP_DISASTER_FILE <- "aroundTheDerailmentPickup20131124.RData"
DROPOFF_DISASTER_FILE <- "aroundTheDerailmentDropoff20131124.RData"
PICKUP_QUEENS_STATION_FILE <- "aroundTheQueensStationPickup20131124.RData"
DROPOFF_QUEENS_STATION_FILE <- "aroundTheQueensStationDropoff20131124.RData"
load(PICKUP_DISASTER_FILE)
load(DROPOFF_DISASTER_FILE)
load(PICKUP_QUEENS_STATION_FILE)
load(DROPOFF_QUEENS_STATION_FILE)
pickup_disaster <- tbl_df(aroundTheDerailmentPickup)
dropoff_disaster <- tbl_df(aroundTheDerailmentDropoff)
pickup_queens <- tbl_df(aroundTheQueensStationPickup)
dropoff_queens <- tbl_df(aroundTheQueensStationtDropoff)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(pickup_time),
day = day(pickup_time),
hour = hour(pickup_time,
type = 'disaster'))
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(pickup_time),
day = day(pickup_time),
hour = hour(pickup_time,
area = 'disaster'))
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(pickup_time),
day = day(pickup_time),
hour = hour(pickup_time),
area = 'disaster')
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
day = day(pickup_time),
hour = hour(pickup_time),
area= 'queens')
dataForPlot <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPlot, aes(hour, fill=area)) + geom_histogram(binwidth = 0.5)
dropoff_disaster <- dropoff_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
day = day(dropoff_time),
hour = hour(dropoff_time),
area = 'around the blast')
dropoff_queens <- dropoff_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
day = day(dropoff_time),
hour = hour(dropoff_time),
area= 'similar place')
dataForDropoffHistogram <- rbind(dropoff_disaster, dropoff_queens)
ggplot(dataForDropoffHistogram, aes(hour, fill=area)) + geom_histogram(binwidth = 0.5)
View(aroundTheDerailmentDropoff)
View(dropoff_disaster)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) + geom_density(binwidth = 0.5)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) + geom_density(alpha = 0.5)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour - mean(hour), fill=area)) + geom_density(alpha = 0.5)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) + geom_density(alpha = 0.5)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) + geom_histogram(binwidth = 0.5)
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) +
geom_histogram(binwidth = 0.5) +
geom_density()
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) +
geom_density()
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(hour, fill=area)) +
geom_density(alpha=0.5)
dataForDropoffHistogram <- rbind(dropoff_disaster, dropoff_queens)
ggplot(dataForDropoffHistogram, aes(hour, fill=area)) +
geom_density(alpha=0.5)
dropoff_disaster <- dropoff_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
dropoff_day = day(dropoff_time),
dropoff_hour = hour(dropoff_time),
area = 'around the blast')
dropoff_queens <- dropoff_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
dropoff_day = day(dropoff_time),
dropoff_hour = hour(dropoff_time),
area= 'similar place')
dataForDropoffHistogram <- rbind(dropoff_disaster, dropoff_queens)
ggplot(dataForDropoffHistogram, aes(dropoff_hour, fill=area)) +
geom_density(alpha=0.5)
t.test(dropoff_disaster$total_amount, dropoff_queens$total_amount)
t.test(dropoff_disaster$fare_amount, dropoff_queens$fare_amount)
t.test(dropoff_disaster$tip_amount, dropoff_queens$tip_amount)
t.test(dropoff_disaster$trip_distance, dropoff_queens$trip_distance)
length(dropoff_disaster$trip_distance)
t.test(dropoff_disaster$trip_distance, dropoff_queens$trip_distance)
length(dropoff_queens %>% filter(vendor_id=="CMT"))
length(dropoff_queens %>% filter(vendor_id=="VTS"))
nrow(dropoff_queens %>% filter(vendor_id=="VTS"))
nrow(dropoff_queens %>% filter(vendor_id=="CMT"))
nrow(dropoff_disaster %>% filter(vendor_id=="CMT"))
nrow(dropoff_disaster %>% filter(vendor_id=="VTS"))
PICKUP_DISASTER_FILE <- "aroundTheDerailmentPickup20131124.RData"
DROPOFF_DISASTER_FILE <- "aroundTheDerailmentDropoff20131124.RData"
PICKUP_QUEENS_STATION_FILE <- "aroundTheQueensStationPickup20131124.RData"
DROPOFF_QUEENS_STATION_FILE <- "aroundTheQueensStationDropoff20131124.RData"
load(PICKUP_DISASTER_FILE)
load(DROPOFF_DISASTER_FILE)
load(PICKUP_QUEENS_STATION_FILE)
load(DROPOFF_QUEENS_STATION_FILE)
pickup_disaster <- tbl_df(aroundTheDerailmentPickup)
dropoff_disaster <- tbl_df(aroundTheDerailmentDropoff)
pickup_queens <- tbl_df(aroundTheQueensStationPickup)
dropoff_queens <- tbl_df(aroundTheQueensStationtDropoff)
pickup_disaster <- pickup_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_time),
area = 'around the blast')
dropoff_disaster <- dropoff_disaster %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
dropoff_day = day(dropoff_time),
dropoff_hour = hour(dropoff_time),
area = 'around the blast')
pickup_queens <- pickup_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
pickup_day = day(pickup_time),
pickup_hour = hour(pickup_time),
area= 'similar place')
dropoff_queens <- dropoff_queens %>%
mutate(pickup_time = ymd_hms(pickup_time),
dropoff_time = ymd_hms(dropoff_time),
dropoff_day = day(dropoff_time),
dropoff_hour = hour(dropoff_time),
area= 'similar place')
dataForPickupHistogram  <- rbind(pickup_disaster, pickup_queens)
ggplot(dataForPickupHistogram, aes(pickup_hour, fill=area)) +
geom_density(alpha=0.5)
dataForDropoffHistogram <- rbind(dropoff_disaster, dropoff_queens)
ggplot(dataForDropoffHistogram, aes(dropoff_hour, fill=area)) +
geom_density(alpha=0.5)
dropoff_disaster_cmt <- dropoff_disaster %>%
filter(vendor_id=="CMT")
dropoff_disaster_cmt <- dropoff_disaster %>%
filter(vendor_id=="CMT") %>%
mutate(vendor="CMT_DISASTER_AREA")
dropoff_disaster_vts <- dropoff_disaster %>%
filter(vendor_id=="VTS") %>%
mutate(vendor="VTS_DISASTER_AREA")
dropoff_queens_cmt <- dropoff_queens %>%
filter(vendor_id=="CMT") %>%
mutate(vendor="CMT_QUEENS")
dropoff_queens_vts <- dropoff_queens %>%
filter(vendor_id=="VTS") %>%
mutate(vendor="VTS_QUEENS")
ggplot(dataForDropoffHistogram, aes(dropoff_hour, fill=vendor)) +
geom_density(alpha=0.5)
dataForVendorAcrossTimeDistribution <- rbind(dropoff_disaster_cmt, dropoff_disaster_vts,
dropoff_queens_cmt, dropoff_disaster_vts)
ggplot(dataForVendorAcrossTimeDistribution, aes(dropoff_hour, fill=vendor)) +
geom_density(alpha=0.5)
dropoff_disaster_cmt <- dropoff_disaster %>%
filter(vendor_id=="CMT") %>%
mutate(vendor="CMT_DISASTER_AREA")
dropoff_disaster_vts <- dropoff_disaster %>%
filter(vendor_id=="VTS") %>%
mutate(vendor="VTS_DISASTER_AREA")
dropoff_queens_cmt <- dropoff_queens %>%
filter(vendor_id=="CMT") %>%
mutate(vendor="CMT_QUEENS")
dropoff_queens_vts <- dropoff_queens %>%
filter(vendor_id=="VTS") %>%
mutate(vendor="VTS_QUEENS")
dataForVendorAcrossTimeDistribution <- rbind(dropoff_disaster_cmt, dropoff_disaster_vts,
dropoff_queens_cmt, dropoff_disaster_vts)
ggplot(dataForVendorAcrossTimeDistribution, aes(dropoff_hour, fill=vendor)) +
geom_density(alpha=0.5)
dataForVendorAcrossTimeDistribution <- rbind(dropoff_disaster_cmt, dropoff_disaster_vts,
dropoff_queens_cmt, dropoff_queens_vts)
ggplot(dataForVendorAcrossTimeDistribution, aes(dropoff_hour, fill=vendor)) +
geom_density(alpha=0.5)
dataForVendorAcrossTimeDistribution <- rbind(dropoff_disaster_cmt,
dropoff_queens_cmt)
ggplot(dataForVendorAcrossTimeDistribution, aes(dropoff_hour, fill=vendor)) +
geom_density(alpha=0.5)
source('~/Abhinav/howba/app/src/project/src/utils.R')
